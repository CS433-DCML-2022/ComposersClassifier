Label processing pipeline

Relevant files: parseMetadata.py (script for producing final labels), labelExtract.py (contains functions for label cleaning), 

Assumes metadata.csv has been produced from Tally.py as part of data pipeline preprocessing

1) Run parseMetadata.py 

    Args:
        flag -c 'directory' to specify location of metadata.csv
        flag -a True to use additional alternative metadata fields in label production 
        flag -t True to use additional alternative metadata fields but save these entries to a separate file
        flag -d True to output strings for failed processing of alternative metadata fields

    Output file/s will be :
        default: metadata_slim.csv
        slim_all_fields_metadata.csv if -a flag set to True

        + ner_metadata.csv if -t flag set to True
        + ner_error_metadata if -d flag set to True

